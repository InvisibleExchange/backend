The structure of requests/responses from/to the backend can be seen in the invisible_backend/proto/engine.proto file.
For example the inputs and outputs of the "execute_deposit" function

The structure of the js transaction classes (LimitOrder, Deposit, Withdrawal, etc) can be seen in the invisible_react/src/app_logic/transactions folder.


Communication with the server is done over gRPC but I couldnt get it to work in the browser for some reason. That should be done because it's a lot more efficient.
Right now I just started an express server that uses the gRPC client to communicate with the backend and a normal REST api to communicate with the frontend.



Some things don't update automatically yet, for example when your order is matched you wont see the result untill you relogin, thats why I made the refresh button on the home screen.
I wanna see how everything looks so I know how best to implement the automatic updates.


For deposits and withdrawals it's can be a bit confusing because, you have to first make a deposit on chain, this is the in the "invisible_react/src/components/SmartContracts" path (you can skip this in the begining).
Then you can claim that deposit in the app through the logic in "invisible_react/src/components/Deposits/DepositComponent.js".
For withdrawals you first withdraw it in the app through the logic in invisible_react/src/components/Withdrawals/WithdrawalsComponent.js. And than only after the next transaction batch is settled onchain you can withdraw it from the smart contract.
Up to you how this looks on the FE, probably this can be one screen for these four things nothing to crazy.


The use of market Ids is a bit inconsistent because I kept switching between strings and numbers and its a bit messy for now.

