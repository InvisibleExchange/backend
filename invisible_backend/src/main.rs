use invisible_backend::utils::cairo_output::{format_cairo_ouput, preprocess_cairo_output};

#[tokio::main]
async fn main() -> Result<(), Box<dyn std::error::Error>> {
    let prog_output = format_cairo_ouput(test_program_output());
    let prog_output = preprocess_cairo_output(prog_output);

    println!("prog_output: {:?}", prog_output);

    Ok(())
}

fn test_program_output() -> &'static str {
    return " -1425886658099885109836055482007642693063751201897081015258657435408981285816
    -650163080385795031039556983917865826639576759682000743484234962086072444407
    597612746588683239426
    4384549513483105816174255055419517140876522422272
    210258926710712570525957419222609112870661182717955
    3592681469
    453755560
    2413654107
    277158171
    3592681469
    453755560
    277158171
    8
    8
    6
    8
    250
    2500
    50000
    250000
    6
    6
    6
    50000000
    500000000
    350000000
    150000
    3000000
    1500000
    15000000
    100000000
    1000000000
    9090909
    7878787
    5656565
    874739451078007766457464989774322083649278607533249481151382481072868806602
    -293669058575504239171450380195767955102919189693631133349615525321517286156
    -1778709136316592932772395480593926193395835735891797916332204797460728444129
    296568192680735721663075531306405401515803196637037431012739700151231900092
    9090909
    1803668541217022618388850284378054044432949947579367206356322750905903603085
    1746373012477205742852069864118722167632335457099893613556379664116346689948
    7878787
    0
    0
    5656565
    0
    0
    3093476031982862328912813676266050545123890816
    -393302505604091532385872272954617122950803056144855334898726491181668109167
    3093476031982862444294723097474599254377743104
    1669987464367741806901581703315727722326801619559351826421346426798401265671
    3093476031982862523522885611738936847921693440
    -976410038976754060617081471252144277675844395132522676197354881363127483375
    3093476031982862566597301219059063325755741824
    -1456303925509134758168355544564704042739212806389531273410886248437316852623
    720256024024700982350945910892070384
    987253332575707135225395624901186832535835507542
    720256081927663892010063219207299328
    987253332575707135225395624901186832535835507542
    720256060178447889295157024872222336
    987253332575707135225395624901186832535835507542
    720256060178447889295157025814732336
    987253332575707135225395624901186832535835507542";
}

// let program_output = test_program_output2();

// let program_output = format_cairo_ouput(program_output);
// // let program_output = preprocess_cairo_output(program_output);

// // for (i, output) in program_output.iter().enumerate() {
// //     println!("{},", output);
// // }

// let output = parse_cairo_output(program_output);
// println!("output: {:?} \n", output.mm_onchain_actions);
